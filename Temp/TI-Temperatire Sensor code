//-----------------------MSP430-F5529----------------------------
#include <msp430.h>
#include <math.h>
#include <uart.h>

#define THERMISTORNOMINAL 2200              // resistance at 25 degrees C
#define TEMPERATURENOMINAL 25               // temp. for nominal resistance (almost always 25 C)
#define NUMSAMPLES 5                        // how many samples to take and average, more takes longer
                                            // but is more 'smooth'
#define BCOEFFICIENT 3950                   // The beta coefficient of the thermistor (usually 3000-4000)
#define SERIESRESISTOR 10000                // the value of the 'other' resistor
unsigned long samples[NUMSAMPLES];
volatile unsigned int results[4];           // Needs to be global in this example
                                            // Otherwise, the compiler removes it                                            // because it is not used for anything.
int main(void)
{
  WDTCTL = WDTPW+WDTHOLD;                   // Stop watchdog timer
  uart_init(BAUD_RATE);
  P6SEL = 0x0F;                             // Enable A/D channel inputs
  ADC12CTL0 = ADC12ON+ADC12MSC+ADC12SHT0_2; // Turn on ADC12, set sampling time
  ADC12CTL1 = ADC12SHP+ADC12CONSEQ_1;       // Use sampling timer, single sequence

  ADC12MCTL1 = ADC12INCH_1;                 // ref+=AVcc, channel = A1

  ADC12IE = 0x08;                           // Enable ADC12IFG.3
  ADC12CTL0 |= ADC12ENC;                    // Enable conversions
  P4DIR |= BIT7;
  P1DIR |= BIT0;

while(1){

    ADC12CTL0 |= ADC12SC;                   // Start convn - software trigger
    P1OUT |= BIT0;
//-----------------------Calculations--------------------------------
if ((ADC12CTL0 &= ~ADC12SC))
   {

        P4OUT |= BIT7;

        unsigned long i;
        float average;
        char res[15]={0};

        for (i=0; i< NUMSAMPLES; i++) {       // take N samples in a row, with a slight delay
         samples[i] = ADC12MEM1;
        }
        average = 0;                          // average all the samples out
        for (i=0; i< NUMSAMPLES; i++) {
           average += samples[i];
        }
        average /= NUMSAMPLES;

        average = 4096 / average - 1;         // convert the value to resistance
        average = SERIESRESISTOR / average;

        float steinhart;
        steinhart = average / THERMISTORNOMINAL;     // (R/Ro)
        steinhart = log(steinhart);                  // ln(R/Ro)
        steinhart /= BCOEFFICIENT;                   // 1/B * ln(R/Ro)
        steinhart += 1.0 / (TEMPERATURENOMINAL + 273.15); // + (1/To)
        steinhart = 1.0 / steinhart;                 // Invert
        steinhart -= 273.15;                         // convert to C

        uart_string("Temperature : ");
        F2A(steinhart,res,1);
        uart_string(res);
        uart_string(" *C");

        uart_tx('\n');
        uart_tx('\r');
        __delay_cycles(100000);
        ADC12IE &= ~ADC12IE;
//--------------------------------------------------------------------
    }
}
}
